name: terraform
on:
  pull_request:
    branches: [main]
  pull_request_target:
    branches: [main]

jobs:
  validate:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    outputs:
      valid_workflow: ${{ steps.validate_workflow.outputs.valid_workflow }}
    steps:
      - uses: actions/checkout@v2
      - id: validate_workflow
        run: |
          output=$(python3 scripts/bool.py)
          #echo "$output"
          #echo "::set-output name=valid_workflow::${{ toJSON($output) }}"

  plan:
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    if: fromJSON(jobs.validate.outputs.valid_workflow)
    #These steps run if either the PR is within the same repo or if the PR is on a fork and the committer has deployer access
    steps:
      - uses: actions/checkout@v2
      - name: Terraform fmt
        id: fmt
        uses: dflook/terraform-fmt@976b15307d109bc95a5c0518fd79b9182c17e095 #v1.22.2
        continue-on-error: true
      - name: Terraform Validate
        id: validate
        uses: dflook/terraform-validate@004cb11294aa51f17cddfeda079592a1ae621dc8 #v1.22.2
      - name: Terraform Plan
        uses: dflook/terraform-plan@1547271e3127df7ad5b667eeed17e8e3a77a76a0 #v1.22.2
        id: plan
        with:
          var_file: |
            vars/tvm-ci-prod.auto.tfvars
          workspace: tvm-ci-prod
